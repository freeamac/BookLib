/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id("application")
    id("java")
    id("edu.sc.seis.launch4j") version "3.0.5"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1-jre")
    implementation("com.opencsv:opencsv:5.5")
   
}

application {
    // Define the main class for the application.
    applicationName = ("BookLib")
    mainClass.set("com.amac.BookLib.BookLibGui")
}

plugins.withType<JavaPlugin>().configureEach {
    configure<JavaPluginExtension> {
        modularity.inferModulePath.set(true)
    }
}

tasks.jar {
    manifest {
        attributes(
            "Main-Class" to "com.amac.BookLib.BookLibGui"
         )
    }
}
            
tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

launch4j {
    mainClassName.set(application.mainClass.get())
    icon.set("${projectDir}/icons/BookLib.ico")
  	outfile.set("BookLib.exe")
	copyright.set("amac")
	windowTitle.set("BookLib")
	companyName.set("BookLib")
	jreMinVersion.set("11")
    requires64Bit.set(true)
    bundledJrePath.set("jre/bin/java")
    requiresJdk.set(true)
}

tasks.register<Copy>("addJreToDistributable") {
    from(zipTree("src/resources/jre.zip"))
    into("$buildDir/launch4j")
    dependsOn("createExe")
}

tasks.register<Zip>("windowsPackageZip") {
    from(fileTree("$buildDir/launch4j"))
    destinationDirectory.set(File("$buildDir/tmp/windowsPackage"))
    archiveFileName.set("BookLib-win64.zip")
    dependsOn("addJreToDistributable")
}

tasks.register<Copy>("windowsPackage") {
    from(file("$buildDir/tmp/windowsPackage/BookLib-win64.zip"))
    into("$buildDir/distributions")
    dependsOn("windowsPackageZip")
}

