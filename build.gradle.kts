/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id("application")
    id("java")
    id("org.beryx.jlink") version "2.23.6"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1-jre")
    implementation("com.opencsv:opencsv:5.5")
   
}

application {
    // Define the main class for the application.
    applicationName = ("BookLib")
    mainClass.set("com.amac.BookLib.BookLibGui")
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

jlink {
    options.set(listOf(
        "--strip-debug",
        "--compress=2",
        "--no-header-files",
        "--no-man-pages"))
    launcher{
        name = "BookLib"
    }
        jpackage {
            imageName = "BookLib"
            icon = "${projectDir}/icons/BookLib.ico"
            appVersion = "1.0.0"
            installerOptions = listOf(
                "--vendor", "amacInc",
                "--win-menu",
                "--copyright", "2025",
                "--description", "MacLeod Book Library"
            )
    }
}

tasks.register("msiPackage", Exec::class) {

    group = "build"

    // Get the java binaries installation directory
    val launcher = javaToolchains.launcherFor(java.toolchain)
    val javaBinDir = launcher.get().metadata.installationPath

    // Install properties
    val programName = "BookLib"
    val programVersion = "1.0.0"
    val programCopyright = "2025"
    val programVendor = "amacInc"
    val programDescription = "MacLeod Book Library"

    // Set the command to execute
    commandLine(
        "$javaBinDir\\bin\\jpackage.exe",
        "--type", "msi",
        "--dest", "$buildDir\\jpackage",
        "--name", "$programName",
        "--app-version", "$programVersion",
        "--app-image", "$buildDir\\jpackage\\$programName",
        "--copyright", "$programCopyright",
        "--vendor", "$programVendor",
        "--description", "$programDescription",
        "--win-menu"
    )

    dependsOn("jpackage")
}


plugins.withType<JavaPlugin>().configureEach {
    configure<JavaPluginExtension> {
        modularity.inferModulePath.set(true)
    }
}

tasks.jar {
    manifest {
        attributes(
            "Main-Class" to "com.amac.BookLib.BookLibGui"
         )
    }
}
            
tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
